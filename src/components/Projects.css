:root {
    --clr-neutral-900: hsl(207, 19%, 9%);
    --clr-neutral-100: hsl(0, 0%, 100%);
    --clr-accent-400: hsl(142, 90%, 61%);
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  .Projects {
    background: var(--clr-neutral-900);
    min-height: 100vh;
  }

  .Projects h1 {
      color: white;
      text-align: center;
  }

  .Cards-Container {
    font-family: 'Ubuntu', sans-serif;
      display: grid;
      place-items: center;
      line-height: 1.6;
  }
  
  .card {
    color: var(--clr-neutral-100);
    background-image: url('../images/retro-keyboard.jpg');
    background-size: cover;
    margin: 1em;
    padding: 15rem 0 0;
    max-width: 35ch;
    border-radius: 0.5rem;
    overflow: hidden;

    transition: transform 500ms ease;
  }

  .card:hover, 
  .card:focus-within {
      transform: scale(1.05);
  }
  
  .card-content {
    --padding: 1.5rem;
    padding: var(--padding);
    background: linear-gradient(
        hsl(0 0% 0% / 0),
        hsl(20 0% 0% / 0.3) 20%,
        hsl(0 0% 0% / 1)
    );
  }

.card-title {
    position: relative;
    width: max-content;
    
}

  .card-title::after {
      content: "";
      position: absolute;
      height: 3px;
      left: calc(var(--padding) * -1);
      bottom: -1px;
      width: calc(100% + var(--padding));
      background: var(--clr-accent-400);
      transform-origin: left;
      
      
      transition: transform 400ms ease;
  }

  .card:hover .card-title::after,
  .card:focus-within .card-title::after {
      transform: scaleX(1);
  }

  .card-body {
      color: rgb(255, 255, 255 / 0.85);
      
  }

  .button {
      cursor: pointer;
      display: inline;
      text-decoration: none;
      color: var(--clr-neutral-900);
      background-color: var(--clr-accent-400);
      font-weight: 600;
      padding: 0.5em 1.25em;
      border-radius: 0.25em;
      transition: 450ms;
  }

  .button:hover, 
  .button:focus  {
      background-color: var(--clr-neutral-100);
  }

  @media (hover) {
    .card-content {
        transform: translateY(65%);
        transition: transform 500ms ease;
    }
    .card:hover .card-content, 
      .card:focus-within .card-content {
        transform: translateY(0);
        /* transition-delay: 500ms; */
      }
    
      .card:focus-within .card-content {
          transition-duration: 0ms;
      }
    
      .card-content > *:not(.card-title) {
          opacity: 0;
          transition: opacity 500ms linear;
      }
    
      .card:hover .card-content > *:not(.card-title),
      .card:focus-within .card-content > *:not(.card-title) {
        opacity: 1;
        /* transition-delay: 800ms; */
      }
    
      .card-title::after {
        transform: scaleX(0);
      }
      }

      @media (prefers-reduced-motion: reduce) {
          *,
          *::before,
          *::after {
              animation-duration: 0.01ms
              !important;
              animation-iteration-count: 1
              !important;
              animation-duration: 0.01.ms
              !important;
              scroll-behavior: auto 
              !important;
              transition-delay: 0ms !important;
          }
      }